import{d as V,r as X,c as T,o as O,a as b,b as x,w as B,v as K,F as k,e as q,u as U,t as N,f as Z,g as G}from"./app.c1b778d4.js";function E(n){if(n===null||n===!0||n===!1)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function f(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function S(n){f(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||typeof n=="object"&&e==="[object Date]"?new Date(n.getTime()):typeof n=="number"||e==="[object Number]"?new Date(n):((typeof n=="string"||e==="[object String]")&&typeof console!="undefined"&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(new Error().stack)),new Date(NaN))}function L(n,e){f(2,arguments);var s=S(n),a=E(e);return isNaN(a)?new Date(NaN):(a&&s.setDate(s.getDate()+a),s)}function J(n,e){f(2,arguments);var s=S(n),a=E(e);if(isNaN(a))return new Date(NaN);if(!a)return s;var t=s.getDate(),o=new Date(s.getTime());o.setMonth(s.getMonth()+a+1,0);var l=o.getDate();return t>=l?o:(s.setFullYear(o.getFullYear(),o.getMonth(),t),s)}var Q={};function nn(){return Q}function en(n,e){f(2,arguments);var s=E(e),a=s*7;return L(n,a)}function sn(n,e){f(2,arguments);var s=E(e);return J(n,s*12)}function m(n,e){for(var s=n<0?"-":"",a=Math.abs(n).toString();a.length<e;)a="0"+a;return s+a}function P(n,e){var s,a;f(1,arguments);var t=S(n);if(isNaN(t.getTime()))throw new RangeError("Invalid time value");var o=String((s=e==null?void 0:e.format)!==null&&s!==void 0?s:"extended"),l=String((a=e==null?void 0:e.representation)!==null&&a!==void 0?a:"complete");if(o!=="extended"&&o!=="basic")throw new RangeError("format must be 'extended' or 'basic'");if(l!=="date"&&l!=="time"&&l!=="complete")throw new RangeError("representation must be 'date', 'time', or 'complete'");var r="",i="",u=o==="extended"?"-":"",w=o==="extended"?":":"";if(l!=="time"){var p=m(t.getDate(),2),D=m(t.getMonth()+1,2),c=m(t.getFullYear(),4);r="".concat(c).concat(u).concat(D).concat(u).concat(p)}if(l!=="date"){var d=t.getTimezoneOffset();if(d!==0){var h=Math.abs(d),y=m(Math.floor(h/60),2),M=m(h%60,2),A=d<0?"+":"-";i="".concat(A).concat(y,":").concat(M)}else i="Z";var _=m(t.getHours(),2),C=m(t.getMinutes(),2),z=m(t.getSeconds(),2),$=r===""?"":"T",g=[_,C,z].join(w);r="".concat(r).concat($).concat(g).concat(i)}return r}function an(n){f(1,arguments);var e=S(n),s=e.getFullYear(),a=e.getMonth(),t=new Date(0);return t.setFullYear(s,a+1,0),t.setHours(0,0,0,0),t.getDate()}function j(n){return f(1,arguments),S(n).getTime()<Date.now()}function tn(n,e){f(2,arguments);var s=S(n),a=E(e),t=s.getFullYear(),o=s.getDate(),l=new Date(0);l.setFullYear(t,a,15),l.setHours(0,0,0,0);var r=an(l);return s.setMonth(a,Math.min(o,r)),s}function ln(n,e){f(2,arguments);var s=S(n),a=E(e);return s.setDate(a),s}function on(n,e,s){var a,t,o,l,r,i,u,w;f(2,arguments);var p=nn(),D=E((a=(t=(o=(l=s==null?void 0:s.weekStartsOn)!==null&&l!==void 0?l:s==null||(r=s.locale)===null||r===void 0||(i=r.options)===null||i===void 0?void 0:i.weekStartsOn)!==null&&o!==void 0?o:p.weekStartsOn)!==null&&t!==void 0?t:(u=p.locale)===null||u===void 0||(w=u.options)===null||w===void 0?void 0:w.weekStartsOn)!==null&&a!==void 0?a:0);if(!(D>=0&&D<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var c=S(n),d=E(e),h=c.getDay(),y=d%7,M=(y+7)%7,A=7-D,_=d<0||d>6?d-(h+A)%7:(M+A)%7-(h+A)%7;return L(c,_)}const rn=[["sunday",0],["monday",1],["tuesday",2],["wednesday",3],["thursday",4],["friday",5],["saturday",6]],cn=[["january",1],["february",2],["march",3],["april",4],["may",5],["june",6],["july",7],["august",8],["september",9],["october",10],["november",11],["december",12]],pn=[["everyday","1D"],["daily","1D"],["weekly","1W"],["monthly","1M"],["yearly","1Y"]],dn=["every","each"],yn=[["today",0],["tomorrow",1],["yesterday",-1]],un="th|st|nd|rd",Dn=[["first",1],["second",2],["third",3],["fourth",4],["fifth",5],["sixth",6],["seventh",7],["eigth",8],["nineth",9],["tenth",10],["one",1],["two",2],["three",3],["four",4],["five",5],["six",6],["seven",7],["eight",8],["nine",9],["ten",10],["eleven",11],["twelve",12],["thirteen",13],["fourteen",14],["fifteen",15],["sixteen",16],["seventeen",17],["eighteen",18],["nineteen",19],["twenty",20],["twentyone",21],["twentytwo",22],["twentythree",23],["twentyfour",24],["twentyfive",25],["twentysix",26],["twentyseven",27],["twentyeight",28],["twentynine",29],["thirty",30]],fn=[["seconds?","s"],["minutes?","m"],["hours?","h"],["days?","D"],["weeks?","W"],["months?","M"],["years?","Y"]],hn={DAY_OF_WEEK_WORDS:rn,MONTH_WORDS:cn,SCHEDULE_SINGLE_WORDS:pn,SCHEDULE_TRIGGER_WORDS:dn,SINGLE_DAY_WORDS:yn,ENUM_SUFFIX:un,ENUM_WORDS:Dn,UNIT_WORDS:fn},gn=[["sonntag",0],["montag",1],["dienstag",2],["mittwoch",3],["donnerstag",4],["freitag",5],["samstag",6]],vn=[["januar",1],["februar",2],["m\xE4rz",3],["april",4],["mai",5],["juni",6],["juli",7],["august",8],["september",9],["oktober",10],["november",11],["dezember",12]],_n=[["t\xE4glich","1D"],["w\xF6chentlich","1W"],["monatlich","1M"],["j\xE4hrlich","1Y"]],Fn=["jeden","jede","alle"],mn=[["heute",0],["morgen",1],["\xFCbermorgen",2],["gestern",-1]],En="ter?",Sn=[["erste[rn]?",1],["zweite[rn]?",2],["dritte[rn]?",3],["vierte[rn]?",4],["f\xFCnfte[rn]?",5],["sexte[rn]?",6],["siebte[rn]?",7],["achte[rn]?",8],["neunte[rn]?",9],["zehnte[rn]?",10],["eins",1],["zwei",2],["drei",3],["vier",4],["f\xFCnf",5],["sechs",6],["sieben",7],["acht",8],["neun",9],["zehn",10],["elf",11],["zw\xF6lf",12],["dreizehn",13],["vierzehn",14],["f\xFCnfzehn",15],["sechzehn",16],["siebzehn",17],["achtzehn",18],["neunzehn",19],["zwanzig",20],["einundzwanzig",21],["zweiundzwanzig",22],["dreinundzwanzig",23],["vierundzwanzig",24],["f\xFCnfundzwanzig",25],["sechsundzwanzig",26],["siebenundzwanzig",27],["achtundzwanzig",28],["neunundzwanzig",29],["dreissig",30],["drei\xDFig",30]],wn=[["sekunden?","s"],["minuten?","m"],["stunden?","h"],["tag[e|en]?","D"],["wochen?","W"],["monat[e|en]?","M"],["jahr[e|en]?","Y"]],Cn={DAY_OF_WEEK_WORDS:gn,MONTH_WORDS:vn,SCHEDULE_SINGLE_WORDS:_n,SCHEDULE_TRIGGER_WORDS:Fn,SINGLE_DAY_WORDS:mn,ENUM_SUFFIX:En,ENUM_WORDS:Sn,UNIT_WORDS:wn},An={en:hn,de:Cn},R=n=>function(e,s,a){return e.some(t=>{const o=typeof t=="string"?t:t[0],l=typeof t=="string"?t:t[1],r=s.match(n(o));if(r&&r[0]){let i=r.index||0,u=r[0];return r[0].startsWith(" ")&&(i++,u=u.slice(1)),a(i,u,l),!0}return!1})},xn=R(n=>new RegExp(`(?:^| )${n}(?=$| )`,"i")),On=R(n=>new RegExp(`(?:^| )${n} `,"i")),bn=R(n=>new RegExp(`^${n} `,"i")),I=R(n=>new RegExp(`^${n}(?=$| )`,"i"));function Mn(n,e){let s=on(n,e,{weekStartsOn:1});return j(s)&&(s=en(s,1)),s}function Y(n,e={locales:["en"]}){if(!n)return null;const s=e.locales.map(a=>An[a]);for(const a of s){const{DAY_OF_WEEK_WORDS:t,MONTH_WORDS:o,SCHEDULE_TRIGGER_WORDS:l,SCHEDULE_SINGLE_WORDS:r,ENUM_WORDS:i,UNIT_WORDS:u,ENUM_SUFFIX:w}=a;let p,D=0,c="",d,h,y=new Date;if(xn(r,n,(g,v,F)=>{D=g,c=v,p=`P${F}`})&&p)return{schedule:{repeatFrequency:p,startDate:P(y),byDay:d,byMonth:h},match:{index:D,length:c.length,text:c}};if(!On(l,n,(g,v)=>{D=g,c=v,n=n.slice(D+c.length)}))continue;let _=!1;const C=n.match(new RegExp(`^(\\d+)(${w}|.)? `,"i"));if(C&&C[0]&&(p=`P${C[1]}`,c=`${c}${C[0]}`,n=n.slice(C[0].length),_=!0),_||(_=bn(i,n,(g,v,F)=>{p=`P${F}`,c=`${c}${v}`,n=n.slice(v.length)})),_||(p="P1"),!I(u,n,(g,v,F)=>{p=`${p}${F}`,c=`${c}${v}`})&&!I(t,n,(v,F,W)=>{p=`${p}W`,d=W,y=Mn(y,d),c=`${c}${F}`})&&!I(o,n,(F,W,H)=>{p=`${p}Y`,h=H,y=ln(tn(y,h-1),1),j(y)&&(y=sn(y,1)),c=`${c}${W}`})||!p)continue;return{schedule:{repeatFrequency:p,startDate:P(y),byDay:d,byMonth:h},match:{index:D,length:c.length,text:c}}}return null}const Rn={class:"md:-mx-8 lg:-mx-12 p-6 lg:p-12 shadow-lg rounded-lg bg-gradient-to-br from-green-50 to-indigo-100 border-4 border-white dark:border-purple-800 dark:from-purple-900 dark:to-indigo-800 dark:shadow-purple-900 text-slate-800"},Wn={class:"relative mb-6"},Nn={class:"border border-transparent absolute inset-0 pointer-events-none p-4 text-xl font-extrabold whitespace-pre text-slate-700"},In={key:0,class:"text-pink-500"},zn={key:1},$n={class:"language-ts"},Tn=V({__name:"ParrotPlayground",setup(n){const e=X("I eat pizza every second friday, yummi"),s=T(()=>Y(e.value)),a=T(()=>{const t=e.value,o=Y(t),l=o&&o.match;if(!l)return[{value:t}];const r=[{isSchedule:!!o,value:l.text}];l.index>0&&r.unshift({value:t.slice(0,l.index)});const i=l.index+l.text.length;return t.length>i&&r.push({value:t.slice(i)}),r});return(t,o)=>(O(),b("div",Rn,[x("div",Wn,[B(x("input",{"onUpdate:modelValue":o[0]||(o[0]=l=>e.value=l),autofocus:"",class:"border border-solid border-white shadow-md bg-slate-50 rounded-lg w-full p-4 text-xl focus:outline focus:outline-4 focus:outline-pink-400 focus:bg-white font-extrabold text-transparent caret-slate-800"},null,512),[[K,e.value]]),x("div",Nn,[(O(!0),b(k,null,q(U(a),l=>(O(),b(k,null,[l.isSchedule?(O(),b("span",In,N(l.value),1)):(O(),b("span",zn,N(l.value),1))],64))),256))])]),x("div",$n,[x("pre",null,[x("code",null,N(U(s)||"null"),1)])])]))}}),kn=G(`<h1 id="dateparrot" tabindex="-1">DateParrot <a class="header-anchor" href="#dateparrot" aria-hidden="true">#</a></h1><p>DateParrot parses natural language into a <a href="https://schema.org/Schedule" target="_blank" rel="noopener noreferrer">unified schedule object</a> or ISO date.</p><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">npm install date-parrot</span></span>
<span class="line"></span></code></pre></div><p><strong>This package is in a very early stage and not yet production ready.</strong></p><h2 id="playground" tabindex="-1">Playground <a class="header-anchor" href="#playground" aria-hidden="true">#</a></h2>`,5),Un=G(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">parseDate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date-parrot</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseDate</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lets go out tomorrow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   date: [TOMORROW_AS_ISO_STRING],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   match: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     index: 12,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     length: 8,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     text: &#39;tomorrow&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">parseSchedule</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date-parrot</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseSchedule</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">every second day</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   schedule: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     repeatFrequency: &#39;P2D&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     startDate: &#39;[NOW_AS_ISO_STRING]&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   match: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     index: 0,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     length: 16,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     text: &#39;every second day&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">parseSchedule</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date-parrot</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseSchedule</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">eat donuts on every 3rd friday</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   schedule: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     repeatFrequency: &#39;P1W&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     startDate: &#39;[NEXT_FRIDAY_AS_ISO_STRING]&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   match: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     index: 11,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     length: 16,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     text: &#39;every 3rd friday&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div><h2 id="localization" tabindex="-1">Localization <a class="header-anchor" href="#localization" aria-hidden="true">#</a></h2><p>By default DateParrot only parses english but you can add support for other languages by adding a <code>locales</code> property to the config of the parser functions.</p><p>It takes an array of locale identifiers (e.g. <code>[&#39;en&#39;, &#39;de&#39;]</code>).</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">parseDate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date-parrot</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">parseDate</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lass uns morgen ausgehen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">locales</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">de</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   date: [TOMORROW_AS_ISO_STRING],</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   match: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     index: 9,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     length: 6,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//     text: &#39;morgen&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//   },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"></span></code></pre></div>`,8),Gn=JSON.parse('{"title":"DateParrot","description":"","frontmatter":{},"headers":[{"level":2,"title":"Playground","slug":"playground"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Localization","slug":"localization"}],"relativePath":"index.md"}'),Pn={name:"index.md"},Ln=Object.assign(Pn,{setup(n){return(e,s)=>(O(),b("div",null,[kn,Z(Tn,{class:"my-8"}),Un]))}});export{Gn as __pageData,Ln as default};
